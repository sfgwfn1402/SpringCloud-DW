server:
  port: 80

spring:
  application:
    name: gateway
  cloud:
    #配置注册中心-------------------
    nacos:
      server-addr: localhost:8848
      #配合注册中心
      discovery:
        locator:
          #开启服务发现动态路由
          enabled: true
          #是否将服务名称小写
          lower-case-service-id: true
    #网关配置-------------------
    gateway:
      enabled: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
      #全局http超时-------------------
      httpclient:
        #配置超时时间 单位：毫秒
        connect-timeout: 1000
        #配置超时时间 单位：秒
        response-timeout: 5s
      #指标信息-------------------
      metrics:
        # 开启 GatewayMetricsFilter
        enabled: true
      #路由配置-------------------
      routes:
        - id: app-service001 #路由唯一ID
#          uri: http://localhost:9001    #目标URI
          #通过服务的注册名来访问服务,例：lb://my-service 指定了通过负载均衡器访问服务名为 my-service 的服务。
          uri: lb://app-service001
          predicates: # 断言，为真则匹配成功
            # 表示匹配在指定日期时间之后发生的请求。（匹配亚洲上海时间 2021-11-29：17:42:47 以后的请求）
#            - After=2021-11-29T17:42:47.000+08:00[Asia/Shanghai]
#            - Path=/app1/** #配置规则Path，如果是app1开头的请、求，则会将该请求转发到目标URL
            # 配置规则Path，如果是app-service001开头的请、求，则会将该请求转发到目标URL
            - Path=/app-service001/**
          filters:
            # 定义了一个 Filter，所有的请求转发至下游服务时会添加请求头 X-Request-Foo:Bar ，
            # 由AddRequestHeaderGatewayFilterFactory 来生产。
            - AddRequestHeader=X-Request-Foo, Bar
            # 过滤器，记录请求日志
            - RequestLog=config
            # 去掉请求路径前缀，如：http://localhost/app-service001/app1/test -> lb://app-service001/app1/test
            # http://网关地址：端口/服务中心注册 serviceId/具体的url
            - StripPrefix=1
          #配置每条路由超时
          metadata:
            response-timeout: 200 # 自定义响应超时时间，单位：毫秒
            connect-timeout: 200 # 自定义连接超时时间，单位：毫秒
management:
  endpoint:
    health:
      #是否显示health详细信息
      show-details: always
      show-components: always
  endpoints:
    #Web端点的配置属性
    web:
      exposure:
        #开放端点的ID集合（eg:['health','info','beans','env']），配置为“*”表示全部
        include: '*'
  metrics:
    tags:
      #应用名称添加到计量器注册表的tag中
      application: ${spring.application.name}