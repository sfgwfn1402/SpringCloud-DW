package org.gateway.utils;

import cn.hutool.core.date.DateUtil;
import cn.hutool.core.util.RandomUtil;
import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.hbase.util.MD5Hash;

import java.util.Random;

/**
 * This class generates a row key based on the current time and a random number.
 * The row key is generated by concatenating the MD5 hash of the current time and the random number,
 * and the current ID.
 */
public class TrafficFlowHashRowKeyGenerator implements RowKeyGenerator {
    private long currentId = 1;

    /**
     * 交通流生成规则
     * rowkey：MD5(路口ID) + "_" + 方向 + "_" 车道号 + "_" +时间戳
     * c4ca4238a0b923820dcc509a6f75849b_1_1_20240606004036980_67442
     * @return
     */
    public byte[] nextId() {
        try {
            String crossing_id = RandomUtil.randomInt(1, 25) + "";
            String direction = RandomUtil.randomInt(1, 4) + "";
            String lane_id = RandomUtil.randomInt(1, 5) + "";

            String time = DateUtil.format(DateUtil.date(), "yyyyMMddHHmmssSSS");

            byte[] crossing_id2 = Bytes.add(MD5Hash.getMD5AsHex(crossing_id.getBytes()).getBytes(), "_".getBytes());
            byte[] direction2 = Bytes.add(direction.getBytes(), "_".getBytes());
            byte[] lane_id2 = Bytes.add(lane_id.getBytes(), "_".getBytes());
            byte[] add = Bytes.add(Bytes.add(time.getBytes(), "_".getBytes()), (currentId + "").getBytes());

            return Bytes.add(Bytes.add(Bytes.add(crossing_id2, direction2), lane_id2), add);
        } finally {
            currentId++;
        }
    }
}  